``matrix_divided`` function
========================

Using ``matrix_divided``
---------------------

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> print(matrix_divided())
Traceback (most recent call last)
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> print(matrix_divided(None))
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> print(matrix_divided(a, ))
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> print(matrix_divided(a, b))
Traceback (most recent call last):
...
NameError: name 'b' is not defined

>>> print(matrix_divided('a', 'a'))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> print(matrix_divided([[1, 2, 1] [2, 3, 4]], 'a'))
Traceback (most recent call last):
...
TypeError: list indices must be integers, not tuple

>>> print(matrix_divided([[1, 2, 1], [2, 3, 4]], 'a'))
Traceback (most recent call last):
...
TypeError: div must be a number
